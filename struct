#include <iostream>
#include <windows.h>
#include<conio.h>
#include <time.h>
using namespace std;
 
int life;
const int height = 20;
const int width = 30;
int place[height][width];
bool decreaselife;
char symb[8][18] = { "..#####...#####..",
					 ".#######.#######.",
					 ".###############.",
					 "..#############..",
					 "....#########....",
					 "......#####......",
					 "....... #........" };
                               

void gotoxy(int x, int y) {
	COORD c;
	c.X = x;
	c.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);
}
void hideCursor() {
	CONSOLE_CURSOR_INFO cursor;
	cursor.dwSize = 100;
	cursor.bVisible = false;
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursor);
}
class shutter {
public:
	int x, y, speed, direc, delay, cntdelay;
	void draw() {
		for (int i = 0; i < 9; i++) {
			place[y][x + 1] = 1;
		}//for to draw
	}//draw
	void move() {
		if (cntdelay == delay) {
			if (direc == 'A' && x - speed > 0) {
				x = -speed;
			}//if2
			else if (direc == 'D' && x + speed < width - 9) {
				x += speed;
				cntdelay = 0;
			}//else
			cntdelay++;
			if (decreaselife) {
				direc = 'S';
				x = width / 2 - 5;
				y = height - height / 7 - 3;
				decreaselife = false;
			}//if3
		}//if
	}//move
};

class ball {
public:
	int x, y, speed, direc;
	void draw() {
		place[y][x] = 5;
	}
	void move() {
		if (direc == 0 && !collision(x - speed, y - speed)) {
			x -= speed;
			y -= speed;
		}//if1
		if (direc == 1 && !collision(x + speed, y - speed)) {
			x += speed;
			y -= speed;
		}//if2
		if (direc == 2 && !collision(x - speed, y + speed)) {
			x -= speed;
			y += speed;
		}//if3
		if (direc == 3 && !collision(x + speed, y + speed)) {
			x += speed;
			y += speed;
		}//if4
	}

	bool collision(int fx, int fy)
	{
		if (place[fy][x] == 8) {
			decreaselife = true;
			x = height - height / 7 - 3;
			direc = 4;
			life--;
		}//if
		else if (place[fy][fx] == 2 || place[y][fx] != 0 || place[fy][fx == 2] || place[y][fx] == 2 || place[fy][x] == 2) {

			if (place[fy][fx] == 2)symb[fy - 2][fx - 6] == '.';
			if (place[y][fx] == 2)symb[fy - 2][fx - 6] == '.';
			if (place[fy][x] == 2)symb[fy - 2][fx - 6] == '.';

			if (place[y][fx] != 0)bounce(fx, y);
			if (place[fy][x] != 0)bounce(x, fy);
			if (place[y][fx] != 0)bounce(fx, fy);

			return true;
		}//else if
		return false;
	}//collision
	void bounce(int fx, int fy) {
		if (direc == 0) {
			if (fx < x)direc = 1;
			else if (fy > y)direc = 2;
			else if (fx < x && fy < y)direc = 0;

		}//if
		else if (direc == 1) {
			if (fx > x)direc = 0;
			else if (fy < y)direc = 3;
			else if (fx > x && fy < y)direc = 1;
		}//else if1
		else if (direc == 2) {
			if (fx < x)direc = 3;
			else if (fy > y)direc = 0;
			else if (fx <x && fy > y)direc = 2;
		}//else if2
		else if (direc == 3) {
			if (fx > x)direc = 2;
			else if (fy > y)direc = 1;
			else if (fx > x && fy > y)direc = 3;
		}//else if3
	}
};
